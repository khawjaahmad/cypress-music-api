name: Cypress E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Split tests by feature for parallel execution
        test-suite: [auth, users, artists]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify Cypress
        run: npx cypress verify

      - name: Wake up backend
        run: |
          echo "Waking up backend service..."
          npx cypress run --browser chrome --spec '**/auth/wake-up.cy.js'
        env:
          CYPRESS_ADMIN_USERNAME: ${{ secrets.CYPRESS_ADMIN_USERNAME }}
          CYPRESS_ADMIN_EMAIL: ${{ secrets.CYPRESS_ADMIN_EMAIL }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
          CYPRESS_API_KEY: ${{ secrets.CYPRESS_API_KEY }}
        continue-on-error: true

      - name: Run Cypress tests - ${{ matrix.test-suite }}
        run: |
          if [ "${{ matrix.test-suite }}" == "auth" ]; then
            npx cypress run --browser chrome --spec 'cypress/e2e/auth/**/*.cy.js'
          elif [ "${{ matrix.test-suite }}" == "users" ]; then
            npx cypress run --browser chrome --spec 'cypress/e2e/users/**/*.cy.js'
          elif [ "${{ matrix.test-suite }}" == "artists" ]; then
            npx cypress run --browser chrome --spec 'cypress/e2e/artists/**/*.cy.js'
          fi
        env:
          # API Configuration
          CYPRESS_API_URL: ${{ secrets.CYPRESS_API_URL }}
          CYPRESS_API_VERSION: ${{ secrets.CYPRESS_API_VERSION }}
          
          # Authentication
          CYPRESS_ADMIN_USERNAME: ${{ secrets.CYPRESS_ADMIN_USERNAME }}
          CYPRESS_ADMIN_EMAIL: ${{ secrets.CYPRESS_ADMIN_EMAIL }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
          CYPRESS_API_KEY: ${{ secrets.CYPRESS_API_KEY }}
          
          # Test Configuration
          CYPRESS_TEST_TIMEOUT: 30000
          CYPRESS_RETRIES: 2
          CYPRESS_ENVIRONMENT: production

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ matrix.test-suite }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/reports
          retention-days: 7

  # Combine results and send notifications
  test-summary:
    runs-on: ubuntu-latest
    needs: cypress-run
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Generate test summary
        run: |
          echo "## 🧪 Cypress Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check the status of each test suite job
          if [ "${{ needs.cypress-run.result }}" == "success" ]; then
            echo "✅ **Overall Status:** All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Overall Status:** Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          # Add actual status based on job results
          for suite in auth users artists; do
            echo "| $suite | Check artifacts |" >> $GITHUB_STEP_SUMMARY
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Environment:** Production" >> $GITHUB_STEP_SUMMARY
          echo "📅 **Run Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

      - name: Notify Slack on failure
        if: failure() && github.ref == 'refs/heads/main'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "🚨 Cypress tests failed on main branch!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}