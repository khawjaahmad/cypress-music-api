name: Cypress E2E Tests with Cloud Dashboard

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests twice daily: 6 AM and 6 PM UTC
    - cron: '0 6 * * *'   # 6:00 AM UTC
    - cron: '0 18 * * *'  # 6:00 PM UTC
  workflow_dispatch:
    inputs:
      record:
        description: 'Record to Cypress Cloud'
        required: false
        default: true
        type: boolean
      parallel:
        description: 'Run tests in parallel'
        required: false
        default: true
        type: boolean

env:
  # Cypress Cloud Configuration
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  # GitHub token for API access
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        # Split tests by feature for parallel execution
        test-suite: [auth, users, artists]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify Cypress
        run: npx cypress verify

      - name: Wake up backend
        run: |
          echo "Waking up backend service..."
          npx cypress run --browser chrome --spec '**/auth/wake-up.cy.js'
        env:
          CYPRESS_ADMIN_USERNAME: ${{ secrets.CYPRESS_ADMIN_USERNAME }}
          CYPRESS_ADMIN_EMAIL: ${{ secrets.CYPRESS_ADMIN_EMAIL }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
          CYPRESS_API_KEY: ${{ secrets.CYPRESS_API_KEY }}
        continue-on-error: true

      - name: Run Cypress tests - ${{ matrix.test-suite }} (with Cloud Recording)
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          record: true
          parallel: true
          group: 'E2E Tests - ${{ matrix.test-suite }}'
          tag: '${{ matrix.test-suite }},scheduled,${{ github.event_name }}'
          spec: |
            ${{
              matrix.test-suite == 'auth' && 'cypress/e2e/auth/**/*.cy.js' ||
              matrix.test-suite == 'users' && 'cypress/e2e/users/**/*.cy.js' ||
              matrix.test-suite == 'artists' && 'cypress/e2e/artists/**/*.cy.js'
            }}
        env:
          # API Configuration
          CYPRESS_API_URL: ${{ secrets.CYPRESS_API_URL }}
          CYPRESS_API_VERSION: ${{ secrets.CYPRESS_API_VERSION }}
          
          # Authentication
          CYPRESS_ADMIN_USERNAME: ${{ secrets.CYPRESS_ADMIN_USERNAME }}
          CYPRESS_ADMIN_EMAIL: ${{ secrets.CYPRESS_ADMIN_EMAIL }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.CYPRESS_ADMIN_PASSWORD }}
          CYPRESS_API_KEY: ${{ secrets.CYPRESS_API_KEY }}
          
          # Test Configuration
          CYPRESS_TEST_TIMEOUT: 30000
          CYPRESS_RETRIES: 2
          CYPRESS_ENVIRONMENT: production
          
          # Cypress Cloud
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}

      - name: Upload test results (if Cloud recording fails)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-results-${{ matrix.test-suite }}-${{ github.run_number }}
          path: |
            cypress/screenshots
            cypress/reports
          retention-days: 7

  # Enhanced test summary with Cypress Cloud integration
  test-summary:
    runs-on: ubuntu-latest
    needs: cypress-run
    if: always()
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        
      - name: Generate enhanced test summary with Cloud links
        run: |
          echo "## 🧪 Cypress Test Results Dashboard" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add Cypress Cloud dashboard link
          if [ -n "${{ secrets.CYPRESS_PROJECT_ID }}" ]; then
            echo "📊 **[View Detailed Dashboard on Cypress Cloud](https://cloud.cypress.io/projects/${{ secrets.CYPRESS_PROJECT_ID }}/runs)**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check the status of each test suite job
          if [ "${{ needs.cypress-run.result }}" == "success" ]; then
            echo "✅ **Overall Status:** All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Overall Status:** Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status | Cypress Cloud |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|---------------|" >> $GITHUB_STEP_SUMMARY
          
          # Add status for each test suite
          for suite in auth users artists; do
            if [ "${{ needs.cypress-run.result }}" == "success" ]; then
              status="✅ Passed"
            else
              status="❌ Check logs"
            fi
            echo "| $suite | $status | [View Details](https://cloud.cypress.io/projects/${{ secrets.CYPRESS_PROJECT_ID }}/runs) |" >> $GITHUB_STEP_SUMMARY
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Execution Details" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Environment:** Production API" >> $GITHUB_STEP_SUMMARY
          echo "📅 **Run Date:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Commit:** [\`${GITHUB_SHA:0:7}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }})" >> $GITHUB_STEP_SUMMARY
          echo "🏃 **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "🔄 **Run #:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          
          # Add branch information
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "⏰ **Scheduled Run:** Daily automated testing" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create Status Badge
        if: github.ref == 'refs/heads/main'
        run: |
          # Create a simple status badge data
          if [ "${{ needs.cypress-run.result }}" == "success" ]; then
            echo "CYPRESS_STATUS=passing" >> $GITHUB_ENV
            echo "BADGE_COLOR=brightgreen" >> $GITHUB_ENV
          else
            echo "CYPRESS_STATUS=failing" >> $GITHUB_ENV
            echo "BADGE_COLOR=red" >> $GITHUB_ENV
          fi

      - name: Notify Slack on failure (Enhanced)
        if: failure() && github.ref == 'refs/heads/main'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: |
            🚨 *Cypress E2E Tests Failed*
            
            📊 *Cypress Cloud Dashboard:* https://cloud.cypress.io/projects/${{ secrets.CYPRESS_PROJECT_ID }}/runs
            🔗 *GitHub Run:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            *Branch:* `${{ github.ref_name }}`
            *Trigger:* ${{ github.event_name }}
            *Commit:* `${{ github.sha }}`
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on success (Scheduled runs only)
        if: success() && github.event_name == 'schedule'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            ✅ *Daily Cypress Tests Completed Successfully*
            
            📊 *View Results:* https://cloud.cypress.io/projects/${{ secrets.CYPRESS_PROJECT_ID }}/runs
            🕐 *Completed at:* $(date -u)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Optional: Update README badge
  update-badge:
    runs-on: ubuntu-latest
    needs: cypress-run
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Update Repository Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GITHUB_TOKEN }}
          gistID: ${{ secrets.GIST_ID }} # You'll need to create a gist for this
          filename: cypress-tests.json
          label: Cypress Tests
          message: ${{ needs.cypress-run.result == 'success' && 'passing' || 'failing' }}
          color: ${{ needs.cypress-run.result == 'success' && 'brightgreen' || 'red' }}